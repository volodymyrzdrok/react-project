{"version":3,"file":"static/js/901.14bf7c45.chunk.js","mappings":"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","sources":["webpack://react-project/./src/components/AuthForm/AuthForm.module.scss?60aa","assets/icons/IconEmail/IconEmail.jsx","assets/icons/IconPassword/IconPassword.jsx","assets/icons/IconName/IconName.jsx","assets/themes/themeProgressBar.js","assets/themes/themeProgressBarRed.js","components/AuthForm/AuthForm.jsx","components/LoginForm/LoginForm.js","pages/LoginPage/LoginPage.js","utils/settingAlert.js","utils/validation.js","webpack://react-project/./src/pages/LoginPage/LoginPage.module.scss?8fcb"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"progressBar\":\"AuthForm_progressBar__DDeyq\",\"formContainer\":\"AuthForm_formContainer__RykyM\",\"form\":\"AuthForm_form__kV4hH\",\"formTitleContainer\":\"AuthForm_formTitleContainer__evgNh\",\"formTitle\":\"AuthForm_formTitle__HDuBL\",\"formIcon\":\"AuthForm_formIcon__HsBDm\",\"input\":\"AuthForm_input__sMieH\",\"formInputMistake\":\"AuthForm_formInputMistake__7ZvNR\",\"formInputWrapper\":\"AuthForm_formInputWrapper__zFZno\",\"mainBtn\":\"AuthForm_mainBtn__X67Xw\",\"subBtn\":\"AuthForm_subBtn__3si0H\"};","import * as React from 'react';\n\nconst IconEmail = props => (\n  <svg\n    width={21}\n    height={16}\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path d=\"M18.5 0h-16C1.4 0 .51.9.51 2L.5 14c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V2c0-1.1-.9-2-2-2zm0 4-8 5-8-5V2l8 5 8-5v2z\" />\n  </svg>\n);\n\nexport default IconEmail;\n","import * as React from 'react';\n\nconst IconPassword = props => (\n  <svg\n    width={17}\n    height={21}\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path d=\"M14.5 7h-1V5c0-2.76-2.24-5-5-5s-5 2.24-5 5v2h-1c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H5.4V5c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z\" />\n  </svg>\n);\n\nexport default IconPassword;\n","import * as React from 'react';\n\nconst IconName = props => (\n  <svg\n    width={19}\n    height={18}\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path d=\"M.5 2v14a2 2 0 0 0 2 2h14c1.1 0 2-.9 2-2V2c0-1.1-.9-2-2-2h-14a2 2 0 0 0-2 2zm12 4c0 1.66-1.34 3-3 3s-3-1.34-3-3 1.34-3 3-3 3 1.34 3 3zm-9 8c0-2 4-3.1 6-3.1s6 1.1 6 3.1v1h-12v-1z\" />\n  </svg>\n);\n\nexport default IconName;\n","import { createTheme } from '@mui/material';\n\nconst themeGreen = createTheme({\n  palette: {\n    primary: {\n      main: '#24CCA7',\n    },\n  },\n  components: {\n    MuiLinearProgress: {\n      styleOverrides: {\n        root: {\n          borderRadius: '20px',\n          boxShadow: '0px 1px 8px rgba(36, 204, 167, 0.5)',\n        },\n      },\n    },\n  },\n});\nexport default themeGreen;\n","import { createTheme } from '@mui/material';\n\nconst themeRed = createTheme({\n  palette: {\n    primary: {\n      main: '#db2007',\n    },\n  },\n  components: {\n    MuiLinearProgress: {\n      styleOverrides: {\n        root: {\n          borderRadius: '20px',\n          boxShadow: '0px 1px 8px rgba(204, 36, 36, 0.5)',\n        },\n      },\n    },\n  },\n});\nexport default themeRed;\n","import style from './AuthForm.module.scss';\nimport { useFormik } from 'formik';\nimport { Link } from 'react-router-dom';\nimport IconEmail from 'assets/icons/IconEmail/IconEmail';\nimport IconPassword from 'assets/icons/IconPassword/IconPassword';\nimport IconName from 'assets/icons/IconName/IconName';\nimport { ThemeProvider } from '@mui/material/styles';\nimport { LinearProgress } from '@mui/material';\nimport wallet40 from '../../assets/images/Wallet40.png';\nimport wallet30 from '../../assets/images/Wallet30.png';\nimport { SigupLogSchema } from 'utils/validation';\nimport themeGreen from 'assets/themes/themeProgressBar';\nimport { useEffect, useState } from 'react';\nimport themeRed from 'assets/themes/themeProgressBarRed';\n\nconst AuthForm = ({ onSubmitFunc, authType }) => {\n  const formik = useFormik({\n    initialValues:\n      authType === 'register'\n        ? {\n            email: '',\n            password: '',\n            confirmPwd: '',\n            username: '',\n          }\n        : {\n            email: '',\n            password: '',\n          },\n\n    validationSchema: SigupLogSchema(authType),\n    onSubmit: values => {\n      onSubmitFunc(values);\n    },\n  });\n\n  const [valueProgress, setValueProgress] = useState(0);\n  useEffect(() => {\n    if (authType !== 'register') return;\n    if (formik.values.confirmPwd.length === 0) {\n      setValueProgress(0.01);\n    } else if (\n      formik.values.password === formik.values.confirmPwd &&\n      formik.values.password.length !== 0\n    ) {\n      setValueProgress(100);\n    } else if (\n      formik.values.password.startsWith(formik.values.confirmPwd) &&\n      formik.values.password.length !== 0\n    ) {\n      setValueProgress(\n        (formik.values.confirmPwd.length * 100) / formik.values.password.length\n      );\n    } else {\n      setValueProgress(0);\n    }\n  }, [\n    valueProgress,\n    formik.values.confirmPwd,\n    formik.values.password,\n    authType,\n  ]);\n\n  return (\n    <div className={style.formContainer}>\n      <div className={style.formTitleContainer}>\n        <picture className={style.logoIcon}>\n          <source media=\"(min-width: 769px)\" srcSet={wallet40} />\n          <source media=\"(max-width: 768px)\" srcSet={wallet30} />\n\n          <img src={wallet40} alt=\"wallet\" />\n        </picture>\n        <h2 className={style.formTitle}>Wallet</h2>\n      </div>\n\n      <form className={style.form} onSubmit={formik.handleSubmit}>\n        <div className={style.formInputWrapper}>\n          <input\n            className={style.input}\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"E-mail\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.email}\n          />\n\n          <IconEmail className={style.formIcon} />\n\n          {formik.touched.email && formik.errors.email ? (\n            <span className={style.formInputMistake}>\n              {formik.errors.email}\n            </span>\n          ) : null}\n        </div>\n\n        <div className={style.formInputWrapper}>\n          <input\n            className={style.input}\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.password}\n          />\n          <IconPassword className={style.formIcon} />\n\n          {formik.touched.password && formik.errors.password ? (\n            <span className={style.formInputMistake}>\n              {formik.errors.password}\n            </span>\n          ) : null}\n        </div>\n\n        {authType === 'register' && (\n          <div>\n            <div className={style.formInputWrapper}>\n              <input\n                className={style.input}\n                name=\"confirmPwd\"\n                type=\"password\"\n                placeholder=\"Confirm password\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.confirmPwd}\n              />\n\n              <IconPassword className={style.formIcon} />\n\n              {formik.touched.confirmPwd && formik.errors.confirmPwd ? (\n                <span className={style.formInputMistake}>\n                  {formik.errors.confirmPwd}\n                </span>\n              ) : null}\n            </div>\n            <ThemeProvider theme={valueProgress === 0 ? themeRed : themeGreen}>\n              <LinearProgress\n                className={style.progressBar}\n                variant=\"determinate\"\n                color=\"primary\"\n                value={valueProgress}\n              />\n            </ThemeProvider>\n          </div>\n        )}\n\n        {authType === 'register' && (\n          <div className={style.formInputWrapper}>\n            <input\n              className={style.input}\n              name=\"username\"\n              type=\"text\"\n              placeholder=\"First name\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.username}\n            />\n\n            <IconName className={style.formIcon} />\n            {formik.touched.username && formik.errors.username ? (\n              <span className={style.formInputMistake}>\n                {formik.errors.username}\n              </span>\n            ) : null}\n          </div>\n        )}\n\n        <button className={style.mainBtn} type=\"submit\">\n          {authType === 'register' ? 'Register' : 'Log in'}\n        </button>\n        <Link to={authType === 'register' ? '/login' : '/register'}>\n          <button className={style.subBtn}>\n            {authType === 'register' ? 'Log in' : 'Register'}\n          </button>\n        </Link>\n      </form>\n    </div>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from 'components/AuthForm/AuthForm';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { loginUser } from 'redux/session/sessionOperations';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const onSubmit = values => {\n    const { email, password } = values;\n    dispatch(loginUser({ email, password }));\n  };\n\n  return <AuthForm authType=\"login\" onSubmitFunc={onSubmit} />;\n};\n\nexport default LoginForm;\n","// import LoginExample from '../../EXAMPLE/LoginExample';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { resetAuthError, selectAuthError } from 'redux/session/sessionSlice';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport { settingAlert } from 'utils/settingAlert';\nimport LoginForm from 'components/LoginForm/LoginForm';\n\nimport s from '../LoginPage/LoginPage.module.scss';\nimport logImgDesktop from '../../assets/images/log-image-desk.webp';\nimport logImgTablet from '../../assets/images/log-image-tab.webp';\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n  const errorAuth = useSelector(selectAuthError);\n\n  useEffect(() => {\n    if (errorAuth === 'Request failed with status code 403') {\n      toast.warning('Invalid Email or Password', settingAlert());\n      dispatch(resetAuthError());\n    }\n  }, [errorAuth, dispatch]);\n\n  return (\n    <div>\n      <div className={s.background}>\n        <div className={s.backdrop}></div>\n        <div className=\"container\">\n          <div className={s.contentWrapper}>\n            <div className={s.illustrationWrapper}>\n              <picture className={s.mainImg}>\n                <source media=\"(min-width: 1280px)\" srcSet={logImgDesktop} />\n                <source media=\"(min-width: 768px)\" srcSet={logImgTablet} />\n\n                <img src={logImgTablet} alt=\"wallet\" />\n              </picture>\n              <h2 className={s.illustrationText}>Finance App</h2>\n            </div>\n\n            <div className={s.formWrapper}>\n              <LoginForm />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* <LoginForm /> */}\n      {/* <LoginExample /> */}\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default LoginPage;\n","export const settingAlert = (timer = 1500) => {\n  return {\n    position: 'top-right',\n    autoClose: timer,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: false,\n    draggable: true,\n    progress: undefined,\n    theme: 'light',\n  };\n};\n","import * as Yup from 'yup';\n\nexport const SigupLogSchema = authType => {\n  const defaultValidate = {\n    email: Yup.string()\n      .min(2, 'Too Short!')\n      .max(50, 'Too Long!')\n      .matches(\n        '[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$',\n        'must be a valid email'\n      )\n      .required(),\n    password: Yup.string()\n      .min(6, 'Too Short!')\n      .max(12, 'Password must be 6-12 characters')\n      .required(),\n  };\n\n  return Yup.object().shape(\n    authType === 'register'\n      ? {\n          username: Yup.string()\n            .min(1, 'Too Short!')\n            .max(12, 'Too Long!(must be less than 12 letters)')\n            .matches(\n              \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n              'only letters!'\n            )\n            .required('Required'),\n          confirmPwd: Yup.string()\n            .oneOf([Yup.ref('password'), null], 'Passwords must match')\n            .required(),\n          ...defaultValidate,\n        }\n      : defaultValidate\n  );\n};\n\nexport const AddTransactionSchema = isChacked => {\n  return isChacked\n    ? Yup.object().shape({\n        categoryName: Yup.object().required('Required'),\n\n        amount: Yup.number()\n          .typeError('only numbers')\n          .positive(\"amount can't start with a minus\")\n          .integer(\" can't include a decimal point\")\n          .required('amount is required'),\n      })\n    : Yup.object().shape({\n        amount: Yup.number()\n          .typeError('only numbers')\n          .positive(\"amount can't start with a minus\")\n          .integer(\" can't include a decimal point\")\n          .required('amount is required'),\n      });\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"background\":\"LoginPage_background__GqaPw\",\"backdrop\":\"LoginPage_backdrop__s68sN\",\"contentWrapper\":\"LoginPage_contentWrapper__erNa9\",\"illustrationWrapper\":\"LoginPage_illustrationWrapper__7TTvR\",\"illustrationText\":\"LoginPage_illustrationText__CoN2L\",\"formWrapper\":\"LoginPage_formWrapper__ppMsG\",\"mainImg\":\"LoginPage_mainImg__ejmzx\"};"],"names":["props","width","height","fill","xmlns","d","createTheme","palette","primary","main","components","MuiLinearProgress","styleOverrides","root","borderRadius","boxShadow","onSubmitFunc","authType","formik","useFormik","initialValues","email","password","confirmPwd","username","validationSchema","SigupLogSchema","onSubmit","values","useState","valueProgress","setValueProgress","useEffect","length","startsWith","className","style","media","srcSet","wallet40","wallet30","src","alt","handleSubmit","name","type","placeholder","onChange","handleChange","onBlur","handleBlur","value","touched","errors","ThemeProvider","theme","themeRed","themeGreen","LinearProgress","variant","color","to","dispatch","useDispatch","AuthForm","loginUser","errorAuth","useSelector","selectAuthError","toast","settingAlert","resetAuthError","s","logImgDesktop","logImgTablet","timer","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","defaultValidate","Yup","min","max","matches","required","shape","oneOf","AddTransactionSchema","isChacked","categoryName","amount","typeError","positive","integer"],"sourceRoot":""}