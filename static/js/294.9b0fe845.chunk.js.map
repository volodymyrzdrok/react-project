{"version":3,"file":"static/js/294.9b0fe845.chunk.js","mappings":"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","sources":["webpack://react-project/./src/components/Table/Table.module.scss?f22e","components/Table/Table.jsx","webpack://react-project/./src/components/Chart/Chart.module.scss?48b5","components/Chart/Chart.js","webpack://react-project/./src/components/Statistics/Statistics.module.scss?0036","components/Statistics/colors.js","components/Statistics/Statistics.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"table\":\"Table_table__YUzYe\",\"table__wrapper\":\"Table_table__wrapper__2rKOO\",\"table__title\":\"Table_table__title__UAq4I\",\"tableScrollBox\":\"Table_tableScrollBox__csZQy\",\"table__item\":\"Table_table__item__sXnLH\",\"table__color\":\"Table_table__color__8NjJm\",\"table__name\":\"Table_table__name__LVkwZ\",\"table__total\":\"Table_table__total__gzh40\",\"table__bottom\":\"Table_table__bottom__aBU+x\",\"first\":\"Table_first__0TIIt\",\"second__expense\":\"Table_second__expense__j+z0a\",\"second__income\":\"Table_second__income__25VVv\"};","import React from 'react';\nimport s from './Table.module.scss';\n\nfunction Table({ categoriesSummary, incomeSummary, expenseSummary, colors }) {\n  return (\n    <>\n      {!categoriesSummary ? (\n        <p>No data</p>\n      ) : (\n        <div className={s.table}>\n          <div className={s.table__wrapper}>\n            <div className={s.table__title}>\n              <span>Category</span>\n              <span>Sum</span>\n            </div>\n            <div className={s.tableScrollBox}>\n              <ul>\n                {categoriesSummary.map(({ name, total }, index) => (\n                  <li key={name} className={s.table__item}>\n                    <span\n                      className={s.table__color}\n                      style={{ backgroundColor: colors[index] }}\n                    ></span>\n                    <span className={s.table__name}>{name}</span>\n                    <span className={s.table__total}>{Math.abs(total)}</span>\n                  </li>\n                ))}\n              </ul>\n            </div>\n            <ul>\n              <li className={s.table__bottom}>\n                <span className={s.first}>Expenses:</span>\n                <span className={s.second__expense}>\n                  {Math.abs(expenseSummary)}\n                </span>\n              </li>\n              <li className={s.table__bottom}>\n                <span className={s.first}>Incomes:</span>\n                <span className={s.second__income}>{incomeSummary}</span>\n              </li>\n            </ul>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Table;\n","// extracted by mini-css-extract-plugin\nexport default {\"chartWrapper\":\"Chart_chartWrapper__eyWek\",\"total\":\"Chart_total__6HLt3\"};","import React, { useEffect, useRef } from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport s from './Chart.module.scss';\n\nChartJS.register(ArcElement, Tooltip);\n\nfunction Chart({ data, periodTotal }) {\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    const chart = chartRef.current;\n    chart.canvas.parentNode.style.height = '100%';\n    chart.canvas.parentNode.style.width = '100%';\n  }, []);\n\n  return (\n    <div className={s.chartWrapper}>\n      <Doughnut ref={chartRef} data={data} />\n      <span className={s.total}>\n        {periodTotal\n          ? `â‚´ ${Math.abs(periodTotal.toFixed(2))}`\n          : 'no transactions'}\n      </span>\n    </div>\n  );\n}\n\nexport default Chart;\n","// extracted by mini-css-extract-plugin\nexport default {\"contentWrapper\":\"Statistics_contentWrapper__ZOUvP\",\"title\":\"Statistics_title__96q7B\",\"selectorsBlock\":\"Statistics_selectorsBlock__eBW4K\",\"diagramBlock\":\"Statistics_diagramBlock__wwJpf\",\"transactionsSummaryBlock\":\"Statistics_transactionsSummaryBlock__-bDRU\"};","const colors = {\n  Income: '#24CCA7',\n  'Main expenses': '#FED057',\n  Products: '#FFD8D0',\n  Car: '#FD9498',\n  'Self care': '#C5BAFF',\n  'Child care': '#6E78E8',\n  'Household products': '#4A56E2',\n  Education: '#81E1FF',\n  Leisure: '#24CCA7',\n  'Other expenses': '#00AD84',\n};\n\nexport default colors;\n","import React from 'react';\n\nimport Table from '../Table/Table';\nimport Chart from '../Chart/Chart';\nimport s from './Statistics.module.scss';\n\nimport colors from './colors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getTransactionsStats } from 'redux/transactionsSummary/transactionsSummaryOperations';\n\nconst formatData = transactions => {\n  const dataTotal = [];\n  const dataName = [];\n\n  if (transactions.length === 0) {\n    return { dataTotal: [100], dataName };\n  }\n\n  for (const category of transactions) {\n    dataTotal.push(category.total);\n    dataName.push(category.name);\n  }\n\n  return { dataTotal, dataName };\n};\n\nconst filterColors = categories => {\n  const filteredColorsArr = [];\n  const colorArr = Object.entries(colors);\n  for (const category of categories) {\n    const filteredColor = colorArr.find(el => el[0] === category)[1];\n    filteredColorsArr.push(filteredColor);\n  }\n\n  return filteredColorsArr;\n};\n\nconst Statistics = () => {\n  const dispatch = useDispatch();\n\n  const { transactionsSummary } = useSelector(state => state.summary);\n\n  const onClickM = () => {\n    dispatch(getTransactionsStats({ month: 2, year: 2023 }));\n  };\n\n  const onClickY = () => {\n    dispatch(getTransactionsStats({ month: 4, year: 2023 }));\n  };\n\n  const transactionData = transactionsSummary?.categoriesSummary || [];\n  const { dataTotal, dataName } = formatData(transactionData);\n  const filteredColors = filterColors(dataName);\n  const datasetLabel = dataName.length ? 'Total' : 'No data';\n\n  const data = {\n    labels: dataName,\n    datasets: [\n      {\n        label: datasetLabel,\n        data: dataTotal,\n        backgroundColor: filteredColors.length ? filteredColors : 'gray',\n        borderColor: 'transparent',\n        cutout: '70%',\n      },\n    ],\n    options: {\n      responsive: true,\n\n      maintainAspectRatio: false,\n    },\n  };\n\n  return (\n    <>\n      <p className={s.title}>Statistics</p>\n      <div className={s.contentWrapper}>\n        <div>\n          <div className={s.diagramBlock}>\n            <Chart data={data} periodTotal={transactionsSummary?.periodTotal} />\n          </div>\n        </div>\n        <div className={s.transactionsSummaryBlock}>\n          <div className={s.selectorsBlock}>\n            <button onClick={onClickM}>February</button>\n            <button onClick={onClickY}>March</button>\n          </div>\n          <Table {...transactionsSummary} colors={filteredColors} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Statistics;\n"],"names":["categoriesSummary","incomeSummary","expenseSummary","colors","className","s","map","index","name","total","style","backgroundColor","Math","abs","ChartJS","ArcElement","Tooltip","data","periodTotal","chartRef","useRef","useEffect","chart","current","canvas","parentNode","height","width","ref","toFixed","Income","Products","Car","Education","Leisure","dispatch","useDispatch","transactionsSummary","useSelector","state","summary","transactions","dataTotal","dataName","length","category","push","formatData","filteredColors","categories","filteredColorsArr","colorArr","Object","entries","filteredColor","find","el","filterColors","labels","datasets","label","borderColor","cutout","options","responsive","maintainAspectRatio","onClick","getTransactionsStats","month","year"],"sourceRoot":""}