{"version":3,"file":"static/js/431.7c2e9172.chunk.js","mappings":"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","sources":["EXAMPLE/LogOutExample.js","EXAMPLE/RegistrationExample.js","pages/RegistrationPage/RegistrationPage.js","utils/settingAlert.js","utils/validation.js","webpack://react-project/./src/EXAMPLE/reg.module.scss?a1f3"],"sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { logoutUser } from 'redux/session/sessionOperations';\nimport { selectAuthStatus } from 'redux/session/sessionSlice';\nimport routes from 'utils/routes';\n\nconst LogOutExample = () => {\n  const authStatus = useSelector(selectAuthStatus);\n  const dispatch = useDispatch();\n  const onLogOut = () => {\n    dispatch(logoutUser());\n  };\n  return (\n    <div>\n      <NavLink to={routes.home}> home</NavLink>\n      <br /> <br />\n      <button onClick={onLogOut}>LOG OUT</button>\n      <h4>authStatus : {`${authStatus} `}</h4>\n    </div>\n  );\n};\n\nexport default LogOutExample;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport routes from 'utils/routes';\nimport s from './reg.module.scss';\nimport { useFormik } from 'formik';\nimport { SignupSchema } from '../utils/validation';\nimport { registerUser } from 'redux/session/sessionOperations';\nimport { useDispatch } from 'react-redux';\nimport LogOutExample from './LogOutExample';\n\nconst RegistrationExample = () => {\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      confirmPassword: '',\n      username: '',\n    },\n    validationSchema: SignupSchema,\n    onSubmit: values => {\n      const { email, username, password } = values;\n      dispatch(registerUser({ email, username, password }));\n    },\n  });\n\n  const { errors, touched } = formik;\n  return (\n    <>\n      <LogOutExample />\n      <form action=\"\" className={s.form} onSubmit={formik.handleSubmit}>\n        <label>\n          <br />\n          email\n          <p className={s.p}>\n            {errors.email && touched.email ? errors.email : null}\n          </p>\n          <input\n            name=\"email\"\n            type=\"email\"\n            onChange={formik.handleChange}\n            value={formik.values.email}\n          />\n        </label>\n        <label>\n          <br />\n          password\n          <p className={s.p}>\n            {errors.password && touched.password ? errors.password : null}\n          </p>\n          <input\n            name=\"password\"\n            type=\"password\"\n            onChange={formik.handleChange}\n            value={formik.values.password}\n          />\n        </label>\n        <label>\n          <br />\n          confirm password\n          <p className={s.p}>\n            {errors.confirmPassword && touched.confirmPassword\n              ? errors.confirmPassword\n              : null}\n          </p>\n          <input\n            name=\"confirmPassword\"\n            type=\"password\"\n            onChange={formik.handleChange}\n            value={formik.values.confirmPassword}\n          />\n        </label>\n        <label>\n          <br />\n          first name\n          <p className={s.p}>\n            {errors.username && touched.username ? errors.username : null}\n          </p>\n          <input\n            name=\"username\"\n            type=\"text\"\n            onChange={formik.handleChange}\n            value={formik.values.username}\n          />\n        </label>\n        <br />\n        <br />\n        <button type=\"submit\">register</button> <br />\n        <br />\n        <NavLink to={routes.login}>\n          <button>login</button>\n        </NavLink>\n      </form>\n    </>\n  );\n};\n\nexport default RegistrationExample;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { resetAuthError, selectAuthError } from 'redux/session/sessionSlice';\nimport RegistrationExample from '../../EXAMPLE/RegistrationExample';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { settingAlert } from 'utils/settingAlert';\n\nconst RegistrationPage = () => {\n  const dispatch = useDispatch();\n  const errorAuth = useSelector(selectAuthError);\n\n  useEffect(() => {\n    if (errorAuth === 'Request failed with status code 409') {\n      toast.warning('User is already logged', settingAlert());\n      dispatch(resetAuthError());\n    }\n  }, [errorAuth, dispatch]);\n\n  return (\n    <div>\n      <RegistrationExample />\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default RegistrationPage;\n","export const settingAlert = (timer = 1500) => {\n  return {\n    position: 'top-right',\n    autoClose: timer,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: false,\n    draggable: true,\n    progress: undefined,\n    theme: 'light',\n  };\n};\n","import * as Yup from 'yup';\n\nexport const SignupSchema = Yup.object().shape({\n  email: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .matches('[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$', 'must be a valid email')\n    .required(),\n  password: Yup.string()\n    .min(6, 'Too Short!')\n    .max(12, 'TPassword must be 6-12 characters')\n    .required(),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref('password'), null], 'Passwords must match')\n    .required(),\n  username: Yup.string()\n    .min(1, 'Too Short!')\n    .max(12, 'Too Long!(be at least 12 letters)')\n    .matches(\n      \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n      'only letters!'\n    )\n    .required('Required'),\n});\n\nexport const SigninSchema = Yup.object().shape({\n  email: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .matches('[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$', 'must be a valid email')\n    .required(),\n  password: Yup.string()\n    .min(6, 'Too Short!')\n    .max(12, 'TPassword must be 6-12 characters')\n    .required(),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"reg_form__3CA5e\",\"p\":\"reg_p__-sHRM\"};"],"names":["authStatus","useSelector","selectAuthStatus","dispatch","useDispatch","to","routes","onClick","logoutUser","formik","useFormik","initialValues","email","password","confirmPassword","username","validationSchema","SignupSchema","onSubmit","values","registerUser","errors","touched","LogOutExample","action","className","s","handleSubmit","name","type","onChange","handleChange","value","errorAuth","selectAuthError","useEffect","toast","settingAlert","resetAuthError","timer","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","Yup","shape","min","max","matches","required","oneOf","SigninSchema"],"sourceRoot":""}